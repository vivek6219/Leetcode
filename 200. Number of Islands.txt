class Solution {
    public int numIslands(char[][] grid) {
      
      int counter=0;
      for(int i=0; i<grid.length; i++){
        	for(int j=0; j<grid[i].length; j++){
          		if(grid[i][j]=='1'){
                dfs(grid, i,j);
		counter++;

              }
          }
        }
    	return counter;
    
    }
  
  //traverse the top, bottom,left, and right if its a 1
    public void dfs(char[][] grid, int i, int j){
    	grid[i][j]='0';
    
        if(i+1>=0 && i+1<grid.length && grid[i+1][j] == '1'){
    	    dfs(grid, i+1, j);
        }
    
        if(i-1>=0 && i-1<grid.length && grid[i-1][j] == '1'){
    	    dfs(grid, i-1, j);
        }
        if(j+1>=0 && j+1<grid[i].length && grid[i][j+1] == '1'){
    	    dfs(grid, i, j+1);
        }
        if(j-1>=0 && j-1<grid[i].length && grid[i][j-1] == '1'){
    	    dfs(grid, i, j-1);
        }

  }
    
    
    
    
}
