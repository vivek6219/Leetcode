class Solution {
    public int[] twoSum(int[] numbers, int target) {
        
        if(numbers==null)
            return numbers;
        if(numbers.length==2)
            return new int[] {1,2};
            
        int left = 0, right=numbers.length-1;
        
        while(left<right){
            int visited = numbers[left]+numbers[right];
            if(visited==target){
                return new int[]{left+1,right+1};
            }
            else if(visited>target){
                right--;
            }else{
                left++;
            }
        }
        return numbers;
        
        

        
//         Map<Integer, Integer> map = new HashMap<>();
        
//         for(int i=0; i<numbers.length; i++){
//             if(map.containsKey(target-numbers[i]))
//                 return new int[] {map.get(target-numbers[i])+1, i+1};
//             else{
//                 map.put(numbers[i],i);
//             }
//         }
        
//         return numbers;
    }
}