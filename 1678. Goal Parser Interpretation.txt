//Naive Solution
//slight improvement, can use a stringbuilder instead to use less heap memory since strings are immutable
class Solution {
    public String interpret(String command) {
        
        String res ="";
        
        for(int i =0; i<command.length(); i++){
            if(command.charAt(i)=='G')
                res+="G";
            if(command.charAt(i)=='(' && command.charAt(i+1)==')'){
                res+="o";
                i++;
            }
            if(command.charAt(i)=='(' && command.charAt(i+1)=='a'&& command.charAt(i+2)=='l'&& command.charAt(i+3)==')')
            {
                res+="al";
                i+=3;
            }
            
        }
        
        return res;
    }
}

//1 liner
class Solution {
    public String interpret(String command) {
        return command.replaceAll("[()][)]","o").replaceAll("[(]al[)]", "al");
    }
}